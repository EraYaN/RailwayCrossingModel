[true*][comm_sensors_agg(no_train).(!comm_sensors_agg(train)*).set_sensors(s_w,on).!set_sensors(s_w,off)*.comm_sensors_agg(no_train)]false %There cannot be a no-train signal if a train is approaching (w->e)
&&
[true*][comm_sensors_agg(no_train).(!comm_sensors_agg(train)*).set_sensors(s_e,on).!set_sensors(s_e,off)*.comm_sensors_agg(no_train)]false %There cannot be a no-train signal if a train is approaching (e->w)

&&

[true*][comm_sensors_agg(train).(!comm_sensors_agg(no_train)*).set_sensors(s_w,off).!set_sensors(s_m,on)*.comm_sensors_agg(no_train)]false %There cannot be a no-train signal if the train is transitting. (w->e)
&&
[true*][comm_sensors_agg(train).(!comm_sensors_agg(no_train)*).set_sensors(s_e,off).!set_sensors(s_m,on)*.comm_sensors_agg(no_train)]false %There cannot be a no-train signal if the train is transitting. (e->w)

&&

[true*][set_sensors(s_m,on).(!set_sensors(s_m,off)*).comm_sensors_agg(no_train)]false %There cannot be a no-train signal if the train is in the middle of the tracks

&&

[true*][set_sensors(s_m,off).!(set_sensors(s_e,on) || set_sensors(s_w,on))*.comm_sensors_agg(train)]false %There cannot be a train signal as soon as the central part of the track is cleared and it hasn't reached either of the outer sensors.

&&

[true*][set_sensors(s_m,off).(!comm_sensors_agg(train)*).set_sensors(s_e,on).comm_sensors_agg(train)]false %There cannot be a train signal if the train is exiting (w->e)
&&
[true*][set_sensors(s_m,off).(!comm_sensors_agg(train)*).set_sensors(s_w,on).comm_sensors_agg(train)]false %There cannot be a train signal if the train is exiting (e->w)

&&

[true*][comm_sensors_agg(no_train).(!set_sensors(s_e,on)*).comm_sensors_agg(train)]false %There cannot be a train signal if the tracks are empty and there is no train approaching (e)
&&
[true*][comm_sensors_agg(no_train).(!set_sensors(s_w,on)*).comm_sensors_agg(train)]false %There cannot be a train signal if the tracks are empty and there is no train approaching (w)

&&

[true*][comm_sensors_agg(no_train).!comm_sensors_agg(train)*.turnon_lights]false %The lights cannot turn on when there is no train on the tracks

&&

[true*][comm_sensors_agg(train).!comm_sensors_agg(no_train)*.turnoff_lights]false %The lights cannot turn off as long as there is a train on the tracks

&&

[true*][turnon_bells.!turnoff_bells*.turnoff_lights]false %The lights cannot turn off as long as the bells are on 

&&

[true*][turnoff_lights.!turnon_lights*.turnoff_bells]false %The bells cannot turn on if the lights are off

&&

[true*][comm_sensors_agg(no_train).!comm_sensors_agg(train)*.turnon_bells]false %The bells cannot turn on if there is no train on the track

&&

[true*][lower_barriers.!raise_barriers*.turnoff_bells]false %The bells cannot turn off if the barriers are lowered

&&

[true*][comm_sensors_agg(train).!comm_sensors_agg(no_train)*.turnoff_bells]false %The bells cannot turn off if there is a train on the track

&&

[true*][comm_sensors_agg(train).!comm_sensors_agg(no_train)*.raise_barriers]false %The barriers cannot be raised when there is a train on the tracks

&&

[true*][comm_sensors_agg(no_train).!comm_sensors_agg(train)*.lower_barriers]false %The barriers cannot be lowered if there is no train on the tracks

&&

[true*][turnoff_bells.!turnon_bells*.lower_barriers]false %The barriers cannot be lowered if the bells are off

&&

[true*]<true*.lower_barriers>true %From every state, the crossing needs to be able to be closed

&&

[true*]<true*.turnoff_lights>true %From every state, the crossing needs to be able to be opened

&&

[true*.lower_barriers]<true*.turnoff_lights>true %From the closed state, the open state needs possible to reach.

&&
[true*.turnoff_lights]<true*.lower_barriers>true % From the open state, the closed state needs to be possible to reach.

