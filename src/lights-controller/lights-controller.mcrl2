% Light Controller
% Group 8

sort State = struct on | off;
     Train = struct train | no_train;

map opp: State -> State;

var state: State;
    T: Train;

eqn opp(on) = off;
    opp(off) = on;

act set_lights: State;
    done;

proc LIGHTS(state: State, T : Train) =
  ((on == state)  && (T == train))   -> set_lights((state)) . LIGHTS((state),T)
+((off == state) && (T == no_train))  -> set_lights((state)) . LIGHTS((state),T)
+((on == state)  && (T == no_train)) -> set_lights(opp(state)) . LIGHTS(opp(state),T)
+((off == state) && (T == train))   -> set_lights(opp(state)) . LIGHTS(opp(state),T);

init LIGHTS(on,no_train);